{"version":3,"sources":["components/Overview/index.js","App.js","registerServiceWorker.js","index.js"],"names":["Overview","react_default","a","createElement","space","size","build_default","start","end","duration","delay","_ref","countUpRef","className","ref","_ref2","_ref3","Header","Layout","Sider","Content","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","baseUrl","document","getElementsByTagName","getAttribute","rootElement","getElementById","ReactDOM","render","BrowserRouter","basename","_useState","useState","_useState2","Object","slicedToArray","collapsed","setCollapsed","_useState3","_useState4","content","setContent","mapComponent","1","Overview_Overview","2","3","4","5","layout","style","height","trigger","collapsible","fontSize","menu","onClick","key","theme","mode","defaultSelectedKeys","Item","FileSearchOutlined","WarningOutlined","HeartOutlined","MedicineBoxOutlined","AreaChartOutlined","padding","React","MenuUnfoldOutlined","MenuFoldOutlined","margin","minHeight","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.4cd76fb4.chunk.js","sourcesContent":["import React from \"react\";\nimport CountUp from \"react-countup\";\nimport { Space } from \"antd\";\nimport \"./style.css\";\n\nexport const Overview = () => {\n\n  return (\n    <Space size={70}>\n      <CountUp start={0} end={3060657} duration={5} delay={0}>\n        {({ countUpRef }) => (\n          <div className=\"counter\">\n            <p>Death</p>\n            <span ref={countUpRef} />\n          </div>\n        )}\n      </CountUp>\n      <CountUp start={0} end={919978} duration={3} delay={0}>\n        {({ countUpRef }) => (\n          <div className=\"counter\">\n            <p>Infected</p>\n            <span ref={countUpRef} />\n          </div>\n        )}\n      </CountUp>\n      <CountUp start={0} end={211343} duration={2} delay={0}>\n        {({ countUpRef }) => (\n          <div className=\"counter\">\n            <p>Recovered</p>\n            <span ref={countUpRef} />\n          </div>\n        )}\n      </CountUp>\n    </Space>\n  );\n};\n","import React, { useState } from \"react\";\nimport \"antd/dist/antd.css\";\nimport \"./custom.css\";\nimport { Layout, Menu } from \"antd\";\nimport {\n  MenuUnfoldOutlined,\n  MenuFoldOutlined,\n  AreaChartOutlined,\n  WarningOutlined,\n  HeartOutlined,\n  FileSearchOutlined,\n  MedicineBoxOutlined,\n} from \"@ant-design/icons\";\nimport { Overview } from './components'\n\nconst { Header, Sider, Content } = Layout;\n\nexport const App = () => {\n  const [collapsed, setCollapsed] = useState(false);\n  const [content, setContent] = useState('1');\n  const handleChange = ({key}) => {\n    setContent(key)\n  }\n\n  const mapComponent = {\n    '1': <Overview/>,\n    '2': 'Symptoms',\n    '3': 'Precautions',\n    '4': 'Treatment',\n    '5': 'Chart',\n  }\n\n  return (\n    <Layout style={{\n      height: '100vh'\n    }}>\n      <Sider trigger={null} collapsible collapsed={collapsed}>\n        <div className=\"logo\" style={{\n          fontSize: collapsed ? '1vw' : '2vw'\n        }}>Ncov 2019</div>\n        <Menu onClick={handleChange} theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[\"1\"]}>\n          <Menu.Item key=\"1\">\n            <FileSearchOutlined />\n            <span>Overview</span>\n          </Menu.Item>\n          <Menu.Item key=\"2\">\n            <WarningOutlined />\n            <span>Symptoms</span>\n          </Menu.Item>\n          <Menu.Item key=\"3\">\n            <HeartOutlined />\n            <span>Precautions</span>\n          </Menu.Item>\n          <Menu.Item key=\"4\">\n            <MedicineBoxOutlined />\n            <span>Treatment</span>\n          </Menu.Item>\n          <Menu.Item key=\"5\">\n            <AreaChartOutlined />\n            <span>Chart</span>\n          </Menu.Item>\n        </Menu>\n      </Sider>\n      <Layout theme='dark' className=\"site-layout\">\n        <Header className=\"site-layout-background\" style={{ padding: 0 }}>\n          {React.createElement(\n            collapsed ? MenuUnfoldOutlined : MenuFoldOutlined,\n            {\n              className: \"trigger\",\n              onClick: () => setCollapsed(!collapsed),\n            }\n          )}\n        </Header>\n        <Content\n          className=\"site-layout-background\"\n          style={{\n            margin: \"24px 16px\",\n            padding: 24,\n            minHeight: 280,\n          }}\n        >\n          {mapComponent[content]}\n        </Content>\n      </Layout>\n    </Layout>\n  );\n};\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport default function register () {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW (swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker (swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { App } from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\nconst rootElement = document.getElementById('root');\n\nReactDOM.render(\n  <BrowserRouter basename={baseUrl}>\n    <App />\n  </BrowserRouter>,\n  rootElement);\n\nregisterServiceWorker();\n\n"],"sourceRoot":""}